<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="SOS create logger debug message" enabled="true" name="debug">logger.debug(String.format(" ${cursor}.... '%1$$s'", par));</template><template autoinsert="true" context="java" deleted="false" description="SOS create logger.info" enabled="true" name="info">logger.info(String.format(" ${cursor}.... '%1$$s'", par));</template><template autoinsert="true" context="java" deleted="false" description="SOS: ObjectFactory: create new Instance of Scheduler object - code " enabled="true" name="JSObj">	/**&#13;
	 * \creator ${objectname}&#13;
	 * \type ${objtype:link(	Cmd,&#13;
Obj,&#13;
Ans&#13;
)}&#13;
	 * \brief ${objectname} - ${CreatorTitle}&#13;
	 *&#13;
	 * \details&#13;
	 * ${CreatorDescription}&#13;
	 *&#13;
	 * \created ${date} ${time} by ${user}&#13;
	 */&#13;
	public JS${objtype}${objectname} create${objectname}() {&#13;
&#13;
		@SuppressWarnings("unused")&#13;
	  final String	conMethodName	= conClassName + "::${objectname}";&#13;
&#13;
		JS${objtype}${objectname} obj${objectname} = new JS${objtype}${objectname}(this);&#13;
		return obj${objectname};&#13;
	} // JS${objtype}${objectname} create${objectname}()</template><template autoinsert="true" context="javadoc" deleted="false" description="SOS: insert template for i18n message file" enabled="true" name="propText">${system:link(	JADE,&#13;
JOE,&#13;
VfS,&#13;
test&#13;
)}_${msgtype:link(L,T,D,E,F)}_${msgkey}.label = ${text}&#13;
${system}_${msgtype}_${msgkey}.tooltip = ${tooltip}&#13;
${system}_${msgtype}_${msgkey}.shorttext = ${tooltip}&#13;
${system}_${msgtype}_${msgkey}.F1 =&#13;
${system}_${msgtype}_${msgkey}.F10 =&#13;
	</template><template autoinsert="true" context="java" deleted="false" description="SOS: Insert The variables for logging" enabled="true" name="SOSLogging">	@SuppressWarnings("unused")&#13;
	private final String		conClassName	= this.getClass().getSimpleName();&#13;
	@SuppressWarnings("unused")&#13;
	private static final String	conSVNVersion	= "$$Id$$";&#13;
	@SuppressWarnings("unused")&#13;
&#13;
	private final Logger		logger			= Logger.getLogger(this.getClass());&#13;
&#13;
${imp:import(org.apache.log4j)}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="SOS: Create an Instance of a SOS-Option Element" enabled="true" name="SOSOption">	/**&#13;
	 * \option ${variablename}&#13;
	 * \type ${OptionType:link(	SOSOptionFileName,&#13;
SOSOptionBoolean,&#13;
SOSOptionContentID,&#13;
SOSOptionElement,&#13;
SOSOptionElementContentIDTest,&#13;
SOSOptionFolderName,&#13;
SOSOptionFtpOptions,&#13;
SOSOptionIndexedItem,&#13;
SOSOptionInFileName,&#13;
SOSOptionInteger,&#13;
SOSOptionMailOptions,&#13;
SOSOptionOutFileName,&#13;
SOSOptionPropertyFolderName,&#13;
SOSOptionString,&#13;
SOSOptionValueList&#13;
)}&#13;
	 * \brief ${variablename} - ${OptionTitle}&#13;
	 *&#13;
	 * \details&#13;
	 * ${OptionDescription}&#13;
	 *&#13;
	 * \mandatory: ${IsMandatory:link (true, false)}&#13;
	 *&#13;
	 * \created ${date} ${time} by ${user}&#13;
	 */&#13;
	@JSOptionDefinition(name = "${variablename}", description = "${OptionDescription}", key = "${variablename}", &#13;
		type = "${OptionType}", mandatory = ${IsMandatory})&#13;
	public ${OptionType}			${variablename}					= new ${OptionType}( // ...&#13;
								this, // ....&#13;
													conClassName + ".${variablename}", // ...&#13;
																					"${OptionDescription}", // ...&#13;
																					"${OptionValue}", // ...&#13;
																					"${OptionDefaultValue}", // ...&#13;
																					${IsMandatory});&#13;
${imp:import(com.sos.JSHelper.Annotations.JSOptionDefinition)}&#13;
${imp2:import(com.sos.JSHelper.Options)}&#13;
&#13;
public ${OptionType} get${variablename}() {&#13;
&#13;
		@SuppressWarnings("unused")&#13;
	  final String	conMethodName	= conClassName + "::get${variablename}";&#13;
&#13;
	return ${variablename};&#13;
} // public String get${variablename}&#13;
&#13;
public ${enclosing_type} set${variablename}(final ${OptionType} pstrValue) {&#13;
&#13;
		@SuppressWarnings("unused")&#13;
	  final String	conMethodName	= conClassName + "::set${variablename}";&#13;
	${variablename} = pstrValue;&#13;
	return this;&#13;
} // public ${enclosing_type} set${variablename}&#13;
&#13;
</template><template autoinsert="true" context="java" deleted="false" description="SOS Text to i18n conversion" enabled="true" name="text2i18n">//  JOE_L_${i18n_key}.label = ${i18n_text}&#13;
//  JOE_L_${i18n_key}.tooltip = ${i18n_text}&#13;
//  JOE_L_${i18n_key}.shorttext = ${i18n_text}&#13;
//  JOE_L_${i18n_key} = ${i18n_text}&#13;
	@I18NMsg private final String JOE_L_${i18n_key} = "JOE_L_${i18n_key}"; // "${i18n_text}";&#13;
	String strM = Messages.getLabel(JOE_L_${i18n_key});&#13;
	logger.info(strM);&#13;
</template></templates>